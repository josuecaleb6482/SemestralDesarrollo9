@model splsys.web.Models.VMCatalogo
@{
    ViewBag.Title = "Crear Catálogo";
    Layout = "~/Views/Shared/FixedSideBarMain.cshtml";
}

@section Header{

}

@using (Html.BeginForm(null, null, null, FormMethod.Post, new { @id = "frmCrearCatalogo", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title">Agregar catálogo</h5>
                    <div class="card-tools">
                        <a class="btn btn-default btn-md btn-icon" title="Regresar" href="@Url.Content("~/Catalogo/Index")">
                            <i class="fas fa-reply-all"></i> Regresar
                        </a>
                        <button id="btnGuardar" title="Guardar Registro" type="submit" class="btn btn-primary btn-spinner btn-md btn-icon" data-spinner-text="Guardando...">
                            <i class="fas fa-save"></i> Guardar
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(model => model.IdCatalogo, htmlAttributes: new { @class = "control-label ml-2" })&nbsp;<span class="text-danger">*</span>
                            <div class="col-md-7">
                                @Html.PMTextBoxFor(model => model.IdCatalogo, new { htmlAttributes = new { @placeholder = "Identificador" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IdTipoCatalogo, htmlAttributes: new { @class = "control-label ml-2" })&nbsp;<span class="text-danger">*</span>
                            <div class="col-md-3">
                                @Html.PMComboBoxFor(model => model.IdTipoCatalogo, ViewBag.tipoCatalogo as Dictionary<string, string>, "Tipo Catalogo")
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label ml-2" })&nbsp;<span class="text-danger">*</span>
                            <div class="col-md-7">
                                @Html.PMTextBoxFor(model => model.Descripcion, new { htmlAttributes = new { @placeholder = "Descripción" } })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script>
       var btn = $("#btnGuardar").ladda({ timeout: 2000 });
        $(document).ready(function () {
            $.validator.setDefaults({
                submitHandler: function () {
                    var formulario = $('#frmCrearCatalogo').serialize();
                   
                    btn.ladda('start');
                    axios.post("@Url.Content("~/Catalogo/Create")", formulario).then(function (res) {
                                btn.ladda('stop');
                                notificaciones.mensajeAjax(res.data, "Crear catálogo");
                                $('#frmCrearCatalogo').trigger("reset");
                                $("#IdTipoCatalogo").val(null).trigger("change");
                        })
                        .catch(function (err) {
                            btn.ladda('stop');
                            notificaciones.error(err.message, "Crear catálogo", null);
                        });
                }
            });
            $('#frmCrearCatalogo').validate({
                rules: {
                    IdCatalogo: {
                        required: true,
                        maxlength: 50
                    },
                    IdTipoCatalogo: {
                        required: true,
                        maxlength: 50
                    },
                    Descripcion: {
                        required: true,
                        maxlength: 50
                    }
                },
                messages: {
                    IdCatalogo: {
                        required: "Por favor ingrese el identificador",
                        maxlength: "Tamaño máximo 50"
                    },
                    IdTipoCatalogo: {
                        required: "Por favor ingrese la categoría de catálogo",
                        maxlength: "Tamaño máximo 50"
                    },
                    Descripcion: {
                        required: "Por favor ingrese la descripcion",
                        maxlength: "Tamaño máximo 50"
                    }
                },
                errorElement: 'span',
                errorPlacement: function (error, element) {
                    error.addClass('invalid-feedback');
                    element.closest('.form-group').append(error);
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass('is-invalid');
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass('is-invalid');
                }
            });

        });
</script>
