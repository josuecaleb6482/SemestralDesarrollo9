@using splsys.clases;
@model  UsuariosCLS.Datos
@{ ViewBag.Title = "Crear Usuario";
				Layout = "~/Views/Shared/FixedSideBarMain.cshtml";
 }

@section Header{

}

@using (Html.BeginForm(null, null, null, FormMethod.Post, new { @id = "frmCrearUsuario", role = "form" }))
{
@Html.AntiForgeryToken()
				<div class="row">
					<div class="col-md-12">
						<div class="card">
							<div class="card-header">
								<h5 class="card-title">Agregar Usuario</h5>
								<div class="card-tools">
									<a class="btn btn-default btn-md btn-icon" title="Regresar" href="@Url.Content("~/Usuarios/Index")">
										<i class="fas fa-reply-all"></i> Regresar
									</a>
									<button id="btnGuardar" title="Guardar Registro" type="submit" class="btn btn-primary btn-spinner btn-md btn-icon" data-spinner-text="Guardando...">
										<i class="fas fa-save"></i> Guardar
									</button>
								</div>
							</div>
							<div class="card-body">
								<div class="form-horizontal">
									<div class="form-group">
										@Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label ml-2" })&nbsp;<span class="text-danger">*</span>
										<div class="col-md-7">
											@*@Html.PMTextBoxFor(model => model.nombre, new { htmlAttributes = new { @placeholder = "Nombre" } })*@
											@Html.TextBoxFor(model => model.email, new { @class = "form-control" })
										</div>
									</div>

									<div class="form-group">
										@Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label ml-2" })&nbsp;<span class="text-danger">*</span>
										<div class="col-md-7">
											@*@Html.PMTextBoxFor(model => model.nombre, new { htmlAttributes = new { @placeholder = "Nombre" } })*@
											@Html.TextBoxFor(model => model.nombre, new { @class = "form-control" })
										</div>
									</div>

									<div class="form-group">
										@Html.LabelFor(model => model.apellido, htmlAttributes: new { @class = "control-label ml-2" })&nbsp;<span class="text-danger">*</span>
										<div class="col-md-7">
											@*@Html.PMTextBoxFor(model => model.apellido, new { htmlAttributes = new { @placeholder = "Apellido" } })*@
											@Html.TextBoxFor(model => model.apellido, new { @class = "form-control" })
										</div>
									</div>
									<div class="form-group">
										@Html.LabelFor(model => model.hash, htmlAttributes: new { @class = "control-label ml-2" })&nbsp;<span class="text-danger">*</span>
										<div class="col-md-7">
											@*@Html.PMTextBoxFor(model => model.nombre, new { htmlAttributes = new { @placeholder = "Nombre" } })*@
											@Html.PasswordFor(model => model.hash, new { @class = "form-control" })
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>}
<script>
	@*var btn = $("#btnGuardar").ladda({ timeout: 2000 });
	
        $(document).ready(function () {
			alert("Guardar")
            $.validator.setDefaults({
                submitHandler: function () {
					var formulario = $('#frmCrearUsuario').serialize();

                    btn.ladda('start');
                  //  axios.post("@Url.Content("~/Usuarios/Create")", formulario).then(function (res) {
					axios.post("@Url.Content("~/Usuarios/Create")").then(function (res) {
                                btn.ladda('stop');
                                notificaciones.mensajeAjax(res.data, "Crear usuario");
                                $('#frmCrearUsuario').trigger("reset");
                                $("#id").val(null).trigger("change");
                        })
                        .catch(function (err) {
                            btn.ladda('stop');
                            notificaciones.error(err.message, "Crear usuario", null);
                        });
                }
            });
			$('#frmCrearUsuario').validate({
                rules: {
                    nombre: {
                        required: true,
                        maxlength: 255
                    }
                },
                messages: {

                    apellido: {
                        required: "Por favor ingrese la descripcion",
                        maxlength: "Tamaño máximo 255"
                    }
                },
                errorElement: 'span',
                errorPlacement: function (error, element) {
                    error.addClass('invalid-feedback');
                    element.closest('.form-group').append(error);
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass('is-invalid');
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass('is-invalid');
                }
            });

        });*@
	function Agregar() {
		var frmCrearUsuario = document.getElementById("frmCrearUsuario");
		frmCrearUsuario.submit();
	}
</script>
