 require("dotenv").config();
 const createError = require("http-errors");
 const cookieParser = require("cookie-parser");
 const logger = require("morgan");
 const { format } = require("date-fns");
const axios = require("axios").default;
const express = require('express');
const cors = require("cors"); 
const app = express();
const PORT   = process.env.PORT || 3000;
const azureDB  = require("tedious");
const dbURI = process.env.DATABASE_URL;
var configData = require("./config/connection"); 
var indexRouter = require("./routes/index");
 
async function getApp() {
    var connectionInfo = await configData.getConnectionInfo();
    azureDB.connect(connectionInfo.DATABASE_URL);
    var app = express();
    var port = normalizePort(process.env.PORT || '3000');
    app.set('port', port);
    app.use(logger("dev"));
    app.use(express.json());
    app.use(express.urlencoded({ extended: false }));
    app.use(cookieParser());

      // error handler
  app.use(function (err, req, res, next) {
    // set locals, only providing error in development
    res.locals.message = err.message;
    res.locals.error = req.app.get("env") === "development" ? err : {};

    // render the error page
    res.status(err.status || 500);
    res.render("error");
  });

  return app;

}
function normalizePort(val) {
    var port = parseInt(val, 10);
  
    if (isNaN(port)) {
      // named pipe
      return val;
    }
  
    if (port >= 0) {
      // port number
      return port;
    }
  
    return false;
  }